import Test from "./config/test.utils.js";
import { render } from "../src/mod.render.js";
import * as pageCrudFns from "../src/page.crud.js";
import * as pageProcessFns from "../src/page.process.js";

import core from "../src/index.js";
const { Singleton } = core;

describe("render() method", () => {
  beforeAll(() => {
    Test.fns.defineSingleton();
    pageCrudFns.createOrReturnPage = jest.fn(async () => Singleton.Page.page);
    pageCrudFns.checkPageAndUpdate = jest.fn(async () => Singleton.Page.page);
    pageProcessFns.processPage = jest.fn(async () => Singleton.Page.page);
  });

  it("should run a callback", (done) => {
    const mockFn = jest.fn();
    render(() => {
      mockFn();
      expect(mockFn).toHaveBeenCalled();
      expect(pageCrudFns.createOrReturnPage).toHaveBeenCalled();
      expect(pageCrudFns.checkPageAndUpdate).toHaveBeenCalled();
      expect(pageProcessFns.processPage).toHaveBeenCalled();
      done();
    });
  });

  it("should continue a promise chain", (done) => {
    const mockFn = jest.fn();
    render().then(() => {
      mockFn();
      expect(mockFn).toHaveBeenCalled();
      expect(pageCrudFns.createOrReturnPage).toHaveBeenCalled();
      expect(pageCrudFns.checkPageAndUpdate).toHaveBeenCalled();
      expect(pageProcessFns.processPage).toHaveBeenCalled();
      done();
    });
  });
});
