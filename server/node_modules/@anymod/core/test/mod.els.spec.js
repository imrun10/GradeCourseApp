import Test from "./config/test.utils.js";
import { insertModHtmlAndCss } from "../src/mod.els.js";
import core from "../src/index.js";
const { Singleton } = core;

/**
 * Tests to verify that the DOM is properly manipulated when inserting
 * mod HTML tags and CSS styling
 */
describe("insertModHtmlAndCss", () => {
  beforeAll(() => {
    Test.fns.defineSingleton();
    document.head.innerHTML = Test.factories.document.headInnerHtml;
  });

  it("should insert CSS and cloaked HTML for a basic mod (default version)", () => {
    document.body.innerHTML = `<div id="anymod-${Test.factories.mods.basic.key}" data-key="${Test.factories.mods.basic.key}"></div>`;
    const localId = Test.factories.mods.basic.key + "-foobarbaz";
    const el = document.getElementById(
      "anymod-" + Test.factories.mods.basic.key
    );
    insertModHtmlAndCss(el, Test.factories.mods.basic, localId);
    expect(document.head.innerHTML).toContain(
      `<style anymod-${Test.factories.mods.basic.key}-live="default">${Test.factories.mods.basic.css}</style>`
    );
    expect(document.body.innerHTML).toContain(
      `<div id="anymod-${
        Test.factories.mods.basic.key
      }" data-cloak-anymod="" data-anymod="${localId}" ${
        Test.factories.mods.basic.key
      }="" data-anymod-mounted="">${Test.factories.mods.basic.html.replace(
        /<\/?div>/g,
        ""
      )}</div>`
    );
  });

  it("should insert CSS and cloaked HTML for a blank mod", () => {
    document.body.innerHTML = `<div id="anymod-blank" data-key="${Test.factories.mods.basic.key}"></div>`;
    const localId = Test.factories.mods.basic.key + "-blankmod";
    const el = document.getElementById("anymod-blank");
    insertModHtmlAndCss(el, Test.factories.mods.basic, localId);
    expect(document.head.innerHTML).toContain(
      `<style anymod-${Test.factories.mods.basic.key}-live="default">${Test.factories.mods.basic.css}</style>`
    );
    expect(document.body.innerHTML).toContain(
      `<div id="anymod-blank" data-cloak-anymod="" data-anymod="${localId}" ${
        Test.factories.mods.basic.key
      }="" data-anymod-mounted="">${Test.factories.mods.basic.html.replace(
        /<\/?div>/g,
        ""
      )}</div>`
    );
  });

  it("should insert CSS and cloaked HTML for a non-default mod version", () => {
    Singleton.Version = {
      currentVersion: "v2",
    };
    document.body.innerHTML = `<div id="anymod-${Test.factories.mods.basic.key}" data-key="${Test.factories.mods.basic.key}"></div>`;
    const localId = Test.factories.mods.basic.key + "-bazbarqux";
    const el = document.getElementById(
      "anymod-" + Test.factories.mods.basic.key
    );
    insertModHtmlAndCss(el, Test.factories.mods.basic, localId);
    expect(document.head.innerHTML).toContain(
      `<style anymod-${Test.factories.mods.basic.key}-live="v2">${Test.factories.mods.basic.versions.v2.css}</style>`
    );
    expect(document.body.innerHTML).toContain(
      `<div id="anymod-${
        Test.factories.mods.basic.eid
      }" data-cloak-anymod="" data-anymod="${localId}" ${
        Test.factories.mods.basic.eid
      }="" data-anymod-mounted="">${Test.factories.mods.basic.versions.v2.html.replace(
        /<\/?div>/g,
        ""
      )}</div>`
    );
  });
});
