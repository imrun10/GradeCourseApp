import constants from "./constants.js";

const Singleton = {
  initialize() {
    this.ApiUrl = this.ApiUrl || constants.apiUrl;
    this.Script = this.Script || { ran: false };
    this.Page =
      this.Page && this.Page.page
        ? this.Page
        : {
            // Page data returned from script1 or API call
            page: {},
            // Mounted Mod Objects, also called mmos
            mountedModObjs: {},
            // Elements on the page that have not been mounted
            unmountedEls: [],
            // Ids of the mmos
            mountedIds() {
              return Object.keys(this.mountedModObjs);
            },
            // A method to map over mmos
            mapMmos(cb) {
              if (!cb || typeof cb !== "function") return;
              this.mountedIds().map((id) => cb(this.mountedModObjs[id]));
            },
            // An array of pages that have been loaded already
            priorPages: [],
          };
    this.Opts =
      this.Opts && this.Opts.env
        ? this.Opts
        : {
            env: "production",
            api: true, // Whether to make page requests (POST, PUT)
            inert: false, // Whether page avoids all interactions with API and console
            preview: false, // Whether page is a preview (e.g. preview.anymod.com)
            tips: true, // Whether to show performance tips in console
            priority: 3, // Number of mods considered as "priority" for first mount
            version: "default", // Content version to use
          };
    this.Version = this.Version || {
      currentVersion: "default",
    };
  },
};

/**
 * Use the window.AnyModPageJs object (loaded by Script 1)
 * to assign Singleton.Page properties
 */
Singleton.assignFromAnyModPageJsIfMatch = () => {
  if (!window.AnyModPageJs) return;
  if (
    window.AnyModPageJs.page &&
    window.AnyModPageJs.page.host === window.location.host &&
    window.AnyModPageJs.page.pathname === window.location.pathname
  ) {
    Object.keys(window.AnyModPageJs).map(
      (attr) =>
        (Singleton.Page[attr] = JSON.parse(
          JSON.stringify(window.AnyModPageJs[attr])
        ))
    );
  }
};

Singleton.initialize();

export default Singleton;
