import Singleton from "./singleton.js";
import alias from "./alias.js";
import { setUnmounted, mount, mountModAtEl } from "./mod.mount.js";
import utils from "./utils.js";

/**
 * Mount all implicitEls to blank tags
 * @param {Object} page - Page object to operate on
 */
const mountImplicitEls = (page) => {
  if (!page || !page.implicitKeys || page.implicitKeys.length < 1) return;
  const els = document.querySelectorAll(
    `[data-key="blank"]:not([data-${alias.lowerCase}-mounted])`
  );
  for (let i = 0; i < page.implicitKeys.length; i++) {
    if (!els[i]) return;
    if (!page.mods[page.implicitKeys[i]]) continue;
    els[i].id = `${alias.lowerCase}-${page.implicitKeys[i]}`;
    els[i].setAttribute("data-key", page.implicitKeys[i]);
    mountModAtEl(page.mods[page.implicitKeys[i]], els[i]);
  }
};

/**
 * Insert a page's CSS & JS assets into the DOM.
 * Call mount on mods as their assets are finished loading.
 * @param {Object} page - Page object to operate on
 */
const processPage = (page) => {
  try {
    document;
  } catch (error) {
    return;
  }
  return new Promise((resolve, reject) => {
    if (!page.mods && alias.lowerCase === "anymod") {
      console.info("Page has no mods");
      return resolve(page);
    }
    setUnmounted();
    utils.loadPageAssets(page, {
      modCb: mount,
      overallCb: () => {
        setUnmounted();
        mountImplicitEls(page);
        resolve(page);
      },
      parent: Singleton.Page,
      // async: true
    });
  });
};

export { processPage };
