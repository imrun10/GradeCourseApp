import alias from "./alias.js";
import constants from "./constants.js";

const eidsAdded = [];

const loadStyle = (url, cb, opts) => {
  try {
    document;
  } catch (error) {
    return;
  }

  opts = opts || {}; // { id }
  let css = document.createElement("link");
  css.href = url;
  css.rel = "stylesheet";
  if (opts.id) css.id = opts.id;
  if (cb) css.onload = cb;
  constants.documentHead.appendChild(css);
};

/**
 * Add an inline style to the document head
 * @param {String} str - CSS style string
 * @param {String} eid - eid for identifying attribute
 * @param {String} suffix - suffix for identifying attribute
 */
const addStyleString = (str, eid, suffix, val) => {
  if (!str || str.length < 1) return;
  suffix = suffix || "";
  val = val || "";
  if (eid && eidsAdded.indexOf(eid) > -1 && suffix === "live") return;
  const styleNode = document.createElement("style");
  if (eid) {
    eidsAdded.push(eid);
    styleNode.setAttribute(`${alias.lowerCase}-${eid}-${suffix}`, val);
  }
  styleNode.innerHTML = str;
  constants.documentHead.appendChild(styleNode);
};

/**
 * Find a style tag within the document head
 * @param {String} eid - eid for identifying attribute
 * @param {String} suffix - suffix for identifying attribute
 */
const getStyleTag = (eid, suffix) => {
  return constants.documentHead.querySelector(
    `[${alias.lowerCase}-${eid}-${suffix}]`
  );
};

/**
 * Remove a style tag from the document head
 * @param {String} eid - eid for identifying attribute
 * @param {String} suffix - suffix for identifying attribute
 */
const removeStyleTag = (eid, suffix) => {
  suffix = suffix || "";
  const styleTag = getStyleTag(eid, suffix);
  if (!styleTag) return;
  constants.documentHead.removeChild(styleTag);
  const i = eidsAdded.indexOf(eid);
  if (i >= 0) eidsAdded.splice(i, 1);
  return styleTag;
};

export { loadStyle, addStyleString, getStyleTag, removeStyleTag };
